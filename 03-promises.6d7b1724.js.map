{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAE9BC,EAAgB,CAACC,EAAUC,IACxB,IAAIC,SAAQ,CAACC,EAAKC,KACvBC,YAAW,KACWC,KAAKC,SAAW,GAEpCJ,EAAI,C,SAAEH,E,MAAUC,IAEhBG,EAAI,C,SAAEJ,E,MAAUC,GAAQ,GAE1BA,EAAM,IAIVL,EAAKY,iBAAiB,UAAUC,IAC9BA,EAAEC,iBACF,MAAMT,EAAQU,SAASF,EAAEG,OAAOX,MAAMY,OAChCC,EAAOH,SAASF,EAAEG,OAAOE,KAAKD,OAC9BE,EAASJ,SAASF,EAAEG,OAAOG,OAAOF,OACxC,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAE/BjB,EAAciB,EAAI,EADGf,EAAQe,EAAIF,GAE9BG,MAAKJ,IACJnB,EAAAwB,OAAOC,QACL,uBAAqBN,EAAIb,eAAmBa,EAAEZ,UAAc,IAG/DmB,OAAMC,IACL3B,EAAAwB,OAAOI,QAAQ,sBAAoBD,EAAErB,eAAiBqB,EAAEpB,UAAY,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nconst createPromise = (position, delay) => {\n  return new Promise((res, rej) => {\n    setTimeout(()=>{\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      res({ position, delay });\n    } else {\n      rej({ position, delay });\n    }\n  },delay)\n  });\n};\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n  const delay = parseInt(e.target.delay.value);\n  const step = parseInt(e.target.step.value);\n  const amount = parseInt(e.target.amount.value);\n  for (let i = 0; i < amount; i++) {\n    const currentDelay = delay + i * step;\n    createPromise(i + 1, currentDelay)\n      .then(value => {\n        Notify.success(\n          `✅ Fulfilled promise ${value.position} in ${value.delay}ms`\n        );\n      })\n      .catch(err => {\n        Notify.failure(`❌ Rejected promise ${err.position} in ${err.delay}ms`);\n      });\n  }\n});\n"],"names":["$1GAPJ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","res","rej","setTimeout","Math","random","addEventListener","e","preventDefault","parseInt","target","value","step","amount","i","then","Notify","success","catch","err","failure"],"version":3,"file":"03-promises.6d7b1724.js.map"}